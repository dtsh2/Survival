# plot(out)
# hist(out$sims.list$a2)
write.table(x=outC$summary,file=paste(file_name,'Const.csv',sep=""))
##
getwd()
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
## must detach at end of run - see end code
<<<<<<< HEAD
const<-outC$mean$a*exp(-outC$mean$a2*Age)
read.csv('GhanaConst.csv')
pars<-read.csv('GhanaConst.csv')
pars
pars<-read.csv('GhanaConst.csv',sep='')
pars
outC<-read.csv('GhanaConst.csv',sep='')
# run simulations
const<-outC$mean$a*exp(-outC$mean$a2*Age)
=======
const<-outC$mean$a*exp(-outC$mean$a2*Age)
read.csv('GhanaConst.csv')
pars<-read.csv('GhanaConst.csv')
pars
pars<-read.csv('GhanaConst.csv',sep='')
pars
outC<-read.csv('GhanaConst.csv',sep='')
# run simulations
const<-outC$mean$a*exp(-outC$mean$a2*Age)
>>>>>>> 0f29144d599f84267d4de3dd025cdaf31e218a71
const<-outC$mean[1,]*exp(-outC$mean[2,]*Age)
outC$mean[2,]
outC$mean
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
const
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
const
plot(const)
1.435e+02
constL<-outC$X2.5.[1]*exp(-outC$X2.5.[2]*Age)
constL
constL<-outC$X97.5.[1]*exp(-outC$X97.5.[2]*Age)
constL
lines(constL)
constL<-outC$X2.5.[1]*exp(-outC$X2.5.[2]*Age)
lines(constL)
round(const)
plot(const)
points(Age,country,bg="black",pch=21)
country = Ghana # Allpops/Bioko/Ghana/Principe/SaoTome/DarEsSalaam/Morogoro
file_name = "Ghana"
points(Age,country,bg="black",pch=21)
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
points(Age,country,bg="black",pch=21)
points(country,bg="black",pch=21)
detach(dat)
<<<<<<< HEAD
detach(dat)
detach(dat)
=======
detach(dat)
detach(dat)
>>>>>>> 0f29144d599f84267d4de3dd025cdaf31e218a71
outC<-read.csv('GhanaConst.csv',sep='')
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const)
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,bg="black",pch=21)
plot(const,ylab="Numbers",xlab='Age')
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,bg="black",pch=21)
legend('topright',c("Data","Predicted"),pch=1:2)
legend('topright',c("Data","Predicted"),pch=c(1,3))
legend('topright',c("Data","Predicted"),pch=c(1,4))
legend('topright',c("Data","Predicted"),pch=c(1,21))
legend('topright',c("Data","Predicted"),pch=c(1,21),bg='black')
legend('topright',c("Data","Predicted"),pch=c(1,21))
legend('topright',c("Data","Predicted"),pch=c(1,21))
?pch
legend('topright',c("Data","Predicted"),pch=c(1,19))
points(dat$Ghana,pch=19)
outC<-read.csv('GhanaConst.csv',sep='')
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age')
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey")
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0)
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey")
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0,lty=2)
dat$Ghana
points(dat$Ghana,pch=19)
plot(dat$Ghana,pch=19)
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0,lty=2)
legend('topright',c("Data","Predicted"),pch=c(1,19),bty='n')
# run the main file first
# import model parameters
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19),bty='n')
abline(h=0,lty=2)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n')
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',col=c('black','black'))
?legend
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt=c('black','black'))
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt=c('black','black'))
abline(h=0,lty=2)
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt=c('black','black'))
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('black','black'))
abline(h=0,lty=2)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
## simulations
# run the main file first
# import model parameters
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)),main="Ghana")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
pdf("simulation_age_ghana.pdf",width=6,height=6)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)),main="Ghana")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
dev.off()
###############################################
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
pdf("compensationVsN.pdf",width=12,height=8)
#tiff("compensationVsN.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,100000), c(0,1), ylab = "Survival", xlab = "Population size",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,100000),y=c(0.8,0.8),lty=2,col=1)
lines(x=c(0,100000),y=c(0.8,0),lty=2,col=2)
mtext("High",side=1,at=100000)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
# y<-read.table(paste(file_name,"const_life_table.csv",sep=""))
# OR
yG <-read.table("Ghanaconst_life_table.csv")
yM <-read.table("Morogoroconst_life_table.csv")
yS <-read.table("SaoTomeconst_life_table.csv")
yP <-read.table("Principeconst_life_table.csv")
yD <-read.table("DarEsSalaamconst_life_table.csv")
### list countries
points(x=c(100000),y=yG$constp[1],pch=1)
points(x=c(10000),y=yM$constp[1],pch=2)
points(x=c(5000),y=yS$constp[1],pch=3)
points(x=c(20000),y=yP$constp[1],pch=4)
points(x=c(6000),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
## survival vs harvest
pdf("compensationVsHarvest.pdf",width=12,height=8)
#tiff("compensationVsHarvest.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,1), c(0,1), ylab = "Survival", xlab = "Harvest",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,1),y=c(0.8,0),lty=2,col=1)
lines(x=c(0,0.5),y=c(0.8,0.8),lty=2,col=2)
lines(x=c(0.5,1),y=c(0.8,0.5),lty=2,col=2)
mtext("High",side=1,at=1)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
points(x=c(0.5),y=yG$constp[1],pch=1)
points(x=c(0),y=yM$constp[1],pch=2)
points(x=c(1),y=yS$constp[1],pch=3)
points(x=c(0),y=yP$constp[1],pch=4)
points(x=c(0),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
yG$constp[1]
const_s_regression<-c(
yG$constp[1],
yM$constp[1],
yS$constp[1],
yP$constp[1],
yD$constp[1])
const_s_regression
class(const_s_regression)
as.data.frame(const_s_regression)
rownames(cres)<-c("Ghana","Morogoro","SaoTome","Principe","DarEsSalaam")
cres<-as.data.frame(const_s_regression)
rownames(cres)<-c("Ghana","Morogoro","SaoTome","Principe","DarEsSalaam")
cres
write.csv(cres,"constSreg_data.csv")
###############################################
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
pdf("compensationVsN.pdf",width=8,height=8)
#tiff("compensationVsN.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,100000), c(0,1), ylab = "Survival", xlab = "Population size",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,100000),y=c(0.8,0.8),lty=2,col=1)
lines(x=c(0,100000),y=c(0.8,0),lty=2,col=2)
mtext("High",side=1,at=100000)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
# y<-read.table(paste(file_name,"const_life_table.csv",sep=""))
# OR
yG <-read.table("Ghanaconst_life_table.csv")
yM <-read.table("Morogoroconst_life_table.csv")
yS <-read.table("SaoTomeconst_life_table.csv")
yP <-read.table("Principeconst_life_table.csv")
yD <-read.table("DarEsSalaamconst_life_table.csv")
### list countries
points(x=c(100000),y=yG$constp[1],pch=1)
points(x=c(10000),y=yM$constp[1],pch=2)
points(x=c(5000),y=yS$constp[1],pch=3)
points(x=c(20000),y=yP$constp[1],pch=4)
points(x=c(6000),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
## survival vs harvest
## additive decline
## conpensatory - const till xs
pdf("compensationVsHarvest.pdf",width=8,height=8)
#tiff("compensationVsHarvest.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,1), c(0,1), ylab = "Survival", xlab = "Harvest",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,1),y=c(0.8,0),lty=2,col=1)
lines(x=c(0,0.5),y=c(0.8,0.8),lty=2,col=2)
lines(x=c(0.5,1),y=c(0.8,0.5),lty=2,col=2)
mtext("High",side=1,at=1)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
points(x=c(0.5),y=yG$constp[1],pch=1)
points(x=c(0),y=yM$constp[1],pch=2)
points(x=c(1),y=yS$constp[1],pch=3)
points(x=c(0),y=yP$constp[1],pch=4)
points(x=c(0),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
pdf("compensationVsN.pdf",width=6,height=6)
#tiff("compensationVsN.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,100000), c(0,1), ylab = "Survival", xlab = "Population size",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,100000),y=c(0.8,0.8),lty=2,col=1)
lines(x=c(0,100000),y=c(0.8,0),lty=2,col=2)
mtext("High",side=1,at=100000)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
# y<-read.table(paste(file_name,"const_life_table.csv",sep=""))
# OR
yG <-read.table("Ghanaconst_life_table.csv")
yM <-read.table("Morogoroconst_life_table.csv")
yS <-read.table("SaoTomeconst_life_table.csv")
yP <-read.table("Principeconst_life_table.csv")
yD <-read.table("DarEsSalaamconst_life_table.csv")
### list countries
points(x=c(100000),y=yG$constp[1],pch=1)
points(x=c(10000),y=yM$constp[1],pch=2)
points(x=c(5000),y=yS$constp[1],pch=3)
points(x=c(20000),y=yP$constp[1],pch=4)
points(x=c(6000),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
## survival vs harvest
## additive decline
## conpensatory - const till xs
pdf("compensationVsHarvest.pdf",width=6,height=6)
#tiff("compensationVsHarvest.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,1), c(0,1), ylab = "Survival", xlab = "Harvest",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,1),y=c(0.8,0),lty=2,col=1)
lines(x=c(0,0.5),y=c(0.8,0.8),lty=2,col=2)
lines(x=c(0.5,1),y=c(0.8,0.5),lty=2,col=2)
mtext("High",side=1,at=1)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
points(x=c(0.5),y=yG$constp[1],pch=1)
points(x=c(0),y=yM$constp[1],pch=2)
points(x=c(1),y=yS$constp[1],pch=3)
points(x=c(0),y=yP$constp[1],pch=4)
points(x=c(0),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
###############################################
rm(list=ls())
###############################################
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
hist(dat$Ghana)
hist(t(dat$Ghana))
barplot(dat$Ghana)
barplot(dat$Principe)
matplot(dat)
barplot(dat)
dat
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
library(ggplot2)
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
library(ggplot2);library(lattice)
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
?melt
library(ggplot2);library(lattice);library(reshape)
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
dat
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
library(ggplot2);library(lattice);library(reshape)
dat <- melt(dat,id.vars = "Age")
dat
ggplot(dat,aes(x=factor(Age), y = value)) +
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=factor(Age), y = value)) +
# facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=factor(Age), y = value)) +
facet_wrap(~variable) #+
#g
dat <- melt(dat,id.vars = "Age")
ggplot(dat,aes(x=factor(Age), y = value)) +
facet_wrap(~variable) #+
geom_bar(aes(fill = factor(value)))
ggplot(dat,aes(x=Age, y = value)) +
facet_wrap(~variable) #+
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=Age, y = value)) +
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=Age, y = value))
ggplot(dat,aes(x=Age, y = value))
facet_wrap(Age~variable) +
geom_bar(aes(fill = factor(Age)))
str(Age)
data <- melt(dat,id.vars = "Age")
attach(dat)
detach((dat))
detach(dat)
detach(dat)
detach(dat)
detach(dat)
data <- melt(dat,id.vars = "Age")
data
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
## must detach at end of run - see end code
library(ggplot2);library(lattice);library(reshape)
data <- melt(dat,id.vars = "Age")
data
summary(data)
class(data)
str(data)
ggplot(data,aes(x=Age, y = value))
facet_wrap(Age~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(data,aes(x=factor(Age), y = value))
ggplot(data,aes(x=factor(Age), y = value))+
facet_wrap(Age~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(data,aes(x=factor(Age), y = value))+
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(data,aes(x=factor(Age), y = value))+
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
?stat
??stat
pt<-ggplot(data,aes(x=factor(Age), y = value))
pt+geom_bar
qplot(factor(Age), data=data, geom="bar", fill=factor(Age))
qplot(factor(Age), data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
names(data)
qplot(variable, data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
qplot(value, data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
qplot(x=Age,y=value, data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
barplot(as.matrix(dat), main="Interesting", ylab="Total", beside=TRUE,
col=terrain.colors(5))
dat
barplot(as.matrix(dat[3:7]), main="Interesting", ylab="Total", beside=TRUE)#,
barplot(as.matrix(dat[3:7]), main="Interesting", ylab="Total", beside=TRUE,
col='grey')
barplot(as.matrix(dat[3:7]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
## must detach at end of run - see end code
barplot(as.matrix(dat[3:7]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
barplot(as.matrix(dat[3:8]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
pdf("age_data.pdf",height=7,width=6)
barplot(as.matrix(dat[3:8]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
dev.off()
pdf("age_data.pdf",height=6,width=8)
barplot(as.matrix(dat[3:8]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
dev.off()
#####################
<<<<<<< HEAD
>>>>>>> origin/master
=======
>>>>>>> 0f29144d599f84267d4de3dd025cdaf31e218a71
