<<<<<<< HEAD
0.87+(0.0428*0.87)
0.87-(0.0428*0.87)
1-0.0673
1-0.234
getwd()
setwd("~/GitHub/Survival")
data<-read.csv("DarEsSalaamboth_life_table.csv",sep='')
data
data<-read.csv("DarEsSalaamboth.csv",sep='')
data
data_dar<-read.csv("DarEsSalaamboth.csv",sep='')
data_mor<-read.csv("Morogoroboth.csv",sep='')
data_gha<-read.csv("Ghanaboth.csv",sep='')
data_sao<-read.csv("SaoTomeboth.csv",sep='')
data_pri<-read.csv("Principeboth.csv",sep='')
plot(data_dar[1:5,1])
plot(data_dar[2:5,1],ylim=c(-.5,0.5))
points(data_mor[2:5,1],col=2)
points(data_gha[2:5,1],col=3)
points(data_mor[2:5,1],col=2)
plot(data_dar[2:5,1],ylim=c(-.5,0.5))
points(data_mor[2:5,1],col=2)
points(data_gha[2:5,1],col=3)
points(data_sao[2:5,1],col=4)
points(data_pri[2:5,1],col=5)
library(psych)
install.packages("psych")
library(psych)
my.stats <- data.frame(values=c(1,4,8),mean=c(10,12,18),se=c(2,3,5))
error.bars(stats=my.stats,type="b",main="data with confidence intervals")
my.stats <- data.frame(mean=c(10,12,18),se=c(2,3,5))
error.bars(stats=my.stats,type="b",main="data with confidence intervals")
plot(data_dar[2:5,1],ylim=c(-.5,0.5))
error.bars(stats=my.stats,main="data with confidence intervals")
data_dar
data_dar[2:5,1]
my.stats <- data.frame(mean=c(data_dar[2:5,1],
data_mor[2:5,1],
data_gha[2:5,1],
data_sao[2:5,1],
data_pri[2:5,1]),
se=c(data_dar[2:5,2],
data_mor[2:5,2],
data_gha[2:5,2],
data_sao[2:5,2],
data_pri[2:5,2]))
error.bars(stats=my.stats,main="data with confidence intervals")
my.stats
data_dar[1,1]
data_dar[2,1]
data_dar[3,1]
data_dar[4,1]
data_dar
my.stats <- data.frame(mean=c(data_dar[2:6,1],
data_mor[2:6,1],
data_gha[2:6,1],
data_sao[2:6,1],
data_pri[2:6,1]),
se=c(data_dar[2:6,2],
data_mor[2:6,2],
data_gha[2:6,2],
data_sao[2:6,2],
data_pri[2:6,2]))
my.stats
a[seq(1, length(a), 6)]
a<-1:120
a[seq(1, length(a), 6)]
my.stats_a1<-my.stats[seq(1, length(my.stats), 5)]
my.stats_a1
ind <- seq(1, nrow(my.stats), by=5)
ind
my.stats[ind, ]
data_mor
my.stats <- data.frame(mean=c(data_dar[2:6,1],
data_mor[2:6,1],
data_gha[2:6,1],
data_sao[2:6,1],
data_pri[2:6,1]),
se=c(data_dar[2:6,2],
data_mor[2:6,2],
data_gha[2:6,2],
data_sao[2:6,2],
data_pri[2:6,2]))
ind_a1 <- seq(1, nrow(my.stats), by=5)
my.stats_a1<-my.stats[ind_a1, ]
ind_a2 <- seq(1, nrow(my.stats), by=5)
my.stats_a2<-my.stats[ind_a2, ]
ind_a3 <- seq(1, nrow(my.stats), by=5)
my.stats_a3<-my.stats[ind_a3, ]
ind_b1 <- seq(1, nrow(my.stats), by=5)
my.stats_b1<-my.stats[ind_b1, ]
ind_ab3 <- seq(1, nrow(my.stats), by=5)
my.stats_b3<-my.stats[ind_b3, ]
ind_b3 <- seq(1, nrow(my.stats), by=5)
my.stats_b3<-my.stats[ind_b3, ]
error.bars(stats=my.stats_a1,main="data with confidence intervals")
error.bars(stats=my.stats_a1,main="Siler model, a1")
error.bars(stats=my.stats_a1,main="Siler model, a2")
error.bars(stats=my.stats_a1,main="Siler model, a3")
error.bars(stats=my.stats_a1,main="Siler model, b1")
error.bars(stats=my.stats_a1,main="Siler model, b3")
error.bars(stats=my.stats_a1,main="Siler model, a1")
error.bars(stats=my.stats_a2,main="Siler model, a2")
ind_a1 <- seq(1, nrow(my.stats), by=5)
my.stats_a1<-my.stats[ind_a1, ]
ind_a2 <- seq(2, nrow(my.stats), by=5)
my.stats_a2<-my.stats[ind_a2, ]
ind_a3 <- seq(3, nrow(my.stats), by=5)
my.stats_a3<-my.stats[ind_a3, ]
ind_b1 <- seq(4, nrow(my.stats), by=5)
my.stats_b1<-my.stats[ind_b1, ]
ind_b3 <- seq(5, nrow(my.stats), by=5)
my.stats_b3<-my.stats[ind_b3, ]
error.bars(stats=my.stats_a1,main="Siler model, a1")
error.bars(stats=my.stats_a2,main="Siler model, a2")
error.bars(stats=my.stats_a3,main="Siler model, a3")
error.bars(stats=my.stats_b1,main="Siler model, b1")
error.bars(stats=my.stats_b3,main="Siler model, b3")
error.bars(stats=my.stats_a1,main="Siler model, a1")
error.bars(stats=my.stats_a2,main="Siler model, a2")
error.bars(stats=my.stats_a3,main="Siler model, a3")
error.bars(stats=my.stats_b1,main="Siler model, b1")
error.bars(stats=my.stats_b3,main="Siler model, b3")
data_dar
?error.bars
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n")
axis(1, at=seq(1, nrow(my.stats), by=5), labels=c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe"))
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n")
axis(1, at=seq(1, nrow(my.stats), by=5), labels=c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe"))
axis(1, at=seq(from=1, to = nrow(my.stats), by=5), labels=c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe"))
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n")
axis(1, at=seq(from=1, to = nrow(my.stats), by=5), labels=c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe"))
axis(1, at=seq(from=1, to = 26, by=5), labels=c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe"))
axis(1, at=seq(from=1, to = 25, by=5), labels=c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe"))
axis(1, at=seq(from=1, to = 25, by=5),
labels=("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe"))
lablist<-c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe")
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n")
axis(1, at=seq(from=1, to = 25, by=5),
labels=lablist)
seq(from=1, to = 25, by=5)
error.bars(stats=my.stats_a1,main="Siler model, a1")#,xaxt="n")
lablist<-c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe")
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n")
axis(1, at=seq(from=1, to = 21, by=5),
labels=lablist)
error.bars(stats=my.stats_a1,main="Siler model, a1")#,xaxt="n")
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = lablist, srt = 45, pos = 0, xpd = TRUE)
text(seq(1, 10, by=1), par("usr")[3] - 0, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(1, 10, by=1), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(1, 10, by=1), par("usr")[3] - 0.05, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
lablist<-c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe")
error.bars(stats=my.stats_a1,main="Siler model, a1")#,xaxt="n")
axis(1, at=seq(from=1, to = 21, by=5),
labels=lablist)
axis(1, at=seq(from=1, to = 21, by=5),
labels=F)
text(seq(1, 5, by=1), par("usr")[3] - 0.05, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n",ylab="Parameter","Location")
axis(1, at=seq(from=1, to = 21, by=5),
labels=F)
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n",ylab="Parameter",xlab="")
axis(1, at=seq(from=1, to = 21, by=5),
labels=F)
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
?par
lablist<-c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe")
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_a2,main="Siler model, a2",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_a3,main="Siler model, a3",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_b1,main="Siler model, b1",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_b3,main="Siler model, b3",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
col=rep(1:5,5))
my.stats
rep(1:5,5)
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
color=rep(1:5,5))
?error.bars
?rep
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
col=rep(c('black',"blue"),5))
rep(1:5,5)
length(rep(1:5,5))
length(nrow(my.stats))
my.stats
dim(my.stats)
n.row(my.stats)
nrow(my.stats)
length(rep(1:5,5))
?error.bars
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
col=rep(1:5,5),arrow.col=rep(1:5,5))
?error.bars
error.bars(attitude,bar=TRUE)
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
col=rep(1:5,5),arrow.col=rep(1:5,5))
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(1, 5, by=5), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(1, 25, by=5), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(2.5, 25, by=5), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
col=rep(1:5,5),arrow.col=rep(1:5,5))
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
abline(h=seq(5.5,25,by=5),lty=2,col='grey')
abline(h=seq(5.5,21,by=5),lty=2,col='grey')
abline(h=seq(5.5,10.5,by=5),lty=2,col='grey')
abline(h=c(5.5,10.5),lty=2,col='grey')
abline(h=c(5.5),lty=2,col='grey')
abline(h=5.5,lty=2,col='grey')
abline(v=5.5,lty=2,col='grey')
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
col=rep(1:5,5),arrow.col=rep(1:5,5))
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
data_dar
plot(data_dar[2,1])
points(data_dar[2,2])
points(data_dar[2,2])
plot(data_dar[2,1],ylim=c(-0.5,0.5))
points(data_dar[2,2])
points(data_dar[2,3])
points(data_dar[2,7])
plot(my.stats_a1)
plot(my.stats$mean)
data_dar
my.dat <- data.frame(mean=c(data_dar[2:6,1],
data_mor[2:6,1],
data_gha[2:6,1],
data_sao[2:6,1],
data_pri[2:6,1]),
up=c(data_dar[2:6,7],
data_mor[2:6,7],
data_gha[2:6,7],
data_sao[2:6,7],
data_pri[2:6,7]),
low=c(data_dar[2:6,3],
data_mor[2:6,3],
data_gha[2:6,3],
data_sao[2:6,3],
data_pri[2:6,3]))
plot(my.stats$mean)
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low)
plot(my.dat$mean)
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n')
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='')
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,col=rep(1:5,5))
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),lty=1:5)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),pch=1:5)
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,col=rep(1:5,5))
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),pch=1:5)
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,col=rep(1:5,5),lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),pch=5)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),pch=2)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),pch=1)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),pch=2)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',col=rep(1:5,5),pch=16)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',pch=16)
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("topright", inset=c(-0.2,0), legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
legend("top", inset=c(-0.2,0), legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
legend("top", inset=c(0,2), legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
legend("top", inset=c(0,-2), legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
legend("top", inset=c(0,-0.1), legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
legend("top", inset=c(0,-0.5), legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
legend("top", inset=c(0,-0.5), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
legend("top", inset=c(0,-0.1), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.1), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.1), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter")
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.1), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter",bty='n')
?legend
legend("top", inset=c(0,-0.0.5), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter",bty='n',)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.0.5), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter",bty='n',)
legend("top", inset=c(0,-0.5), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter",bty='n',)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="parameter",bty='n',)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='n',)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='n',)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
legend("top", inset=c(0,-0.1), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
legend("top", inset=c(0,-0.2), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
par(mar=c(5.1, 4.1, 8.1, 4.1), xpd=TRUE)
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.2), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
par(mar=c(5.1, 4.1, 8.1, 4.1))
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.2), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
dev.off()
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.2), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
par(mar=c(5.1, 4.1, 4.1, 4.1))
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
par(mar=c(6.1, 4.1, 4.1, 4.1))
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
par(mar=c(7.1, 4.1, 4.1, 4.1))
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
text(seq(2.5, 25, by=5), par("usr")[3] - 0.2, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
par(mar=c(7.1, 4.1, 4.1, 4.1))
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.2, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
data_dar<-read.csv("DarEsSalaamboth.csv",sep='')
data_mor<-read.csv("Morogoroboth.csv",sep='')
data_gha<-read.csv("Ghanaboth.csv",sep='')
data_sao<-read.csv("SaoTomeboth.csv",sep='')
data_pri<-read.csv("Principeboth.csv",sep='')
library(psych)
my.stats <- data.frame(mean=c(data_dar[2:6,1],
data_mor[2:6,1],
data_gha[2:6,1],
data_sao[2:6,1],
data_pri[2:6,1]),
se=c(data_dar[2:6,2],
data_mor[2:6,2],
data_gha[2:6,2],
data_sao[2:6,2],
data_pri[2:6,2]))
ind_a1 <- seq(1, nrow(my.stats), by=5)
my.stats_a1<-my.stats[ind_a1, ]
ind_a2 <- seq(2, nrow(my.stats), by=5)
my.stats_a2<-my.stats[ind_a2, ]
ind_a3 <- seq(3, nrow(my.stats), by=5)
my.stats_a3<-my.stats[ind_a3, ]
ind_b1 <- seq(4, nrow(my.stats), by=5)
my.stats_b1<-my.stats[ind_b1, ]
ind_b3 <- seq(5, nrow(my.stats), by=5)
my.stats_b3<-my.stats[ind_b3, ]
lablist<-c("Dar Es Salaam","Morogoro","Accra","Sao Tome","Principe")
error.bars(stats=my.stats_a1,main="Siler model, a1",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_a2,main="Siler model, a2",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_a3,main="Siler model, a3",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_b1,main="Siler model, b1",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats_b3,main="Siler model, b3",xaxt="n",ylab="Parameter",xlab="")
text(seq(1, 5, by=1), par("usr")[3] - 0.06, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
error.bars(stats=my.stats,main="Siler model parameters",xaxt="n",ylab="Parameter estimate",xlab="",
col=rep(1:5,5),arrow.col=rep(1:5,5))
text(seq(2.5, 25, by=5), par("usr")[3] - 0.1, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
my.dat <- data.frame(mean=c(data_dar[2:6,1],
data_mor[2:6,1],
data_gha[2:6,1],
data_sao[2:6,1],
data_pri[2:6,1]),
up=c(data_dar[2:6,7],
data_mor[2:6,7],
data_gha[2:6,7],
data_sao[2:6,7],
data_pri[2:6,7]),
low=c(data_dar[2:6,3],
data_mor[2:6,3],
data_gha[2:6,3],
data_sao[2:6,3],
data_pri[2:6,3]))
par(mar=c(7.1, 4.1, 4.1, 4.1))
plot(my.dat$mean,ylim=c(min(my.dat),max(my.dat)+0.1),ylab='estimate',xaxt='n',xlab='',pch=rep(1:5,5))
segments(x0=1:25,x1=1:25,y0=my.dat$up,y1=my.dat$low,lty=1:5)
abline(v=seq(5.5, 25, by=5),lty=2,col='grey')
text(seq(2.5, 25, by=5), par("usr")[3] - 0.2, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
legend("top", inset=c(0,-0.05), horiz=T,legend=c("a1","a2","a3","b1","b3"), pch=1:5,lty=1:5, title="",bty='y',)
box()
#dev.off()
plot(my_dat$mean[1:5])
plot(my.dat$mean[1:5])
plot(my.dat$mean[1+i])
i=5
plot(my.dat$mean[1+i])
length(my.dat$mean)
i=seq(1,25,by=5)
plot(my.dat$mean[i])
i=c(4,3,1,2,5)
plot(my.dat$mean[i])
my.dat
plot(my.dat$mean[seq(1,25,5)])
plot(my.dat$mean[seq(1,25,5)],pch=c(3,3,2,1,3))
plot(my.dat$mean[seq(2,25,5)],pch=c(3,3,2,1,3),main="a2")
plot(my.dat$mean[seq(1,25,5)],pch=c(3,3,2,1,3),main="a1")
plot(my.dat$mean[seq(2,25,5)],pch=c(3,3,2,1,3),main="a2")
plot(my.dat$mean[seq(3,25,5)],pch=c(3,3,2,1,3),main="a3")
plot(my.dat$mean[seq(4,25,5)],pch=c(3,3,2,1,3),main="b1")
plot(my.dat$mean[seq(5,25,5)],pch=c(3,3,2,1,3),main="b3")
plot(my.dat$mean[seq(1,25,5)],pch=c(3,3,2,1,3),main="a1")
plot(my.dat$mean[seq(2,25,5)],pch=c(3,3,2,1,3),main="a2")
plot(my.dat$mean[seq(3,25,5)],pch=c(3,3,2,1,3),main="a3")
plot(my.dat$mean[seq(4,25,5)],pch=c(3,3,2,1,3),main="b1")
plot(my.dat$mean[seq(5,25,5)],pch=c(3,3,2,1,3),main="b3")
=======
initC<-constant_init$Allpops
initS<-sen_init$Allpops
initM<-mat_init$Allpops
initB<-both_init$Allpops
# data
win.data<-list(data=country,Age=Age,nobs=length(country))
inits<-function()
initC
outC<-bugs(data=win.data,inits=inits,parameters.to.save=paramsC,
model.file="allmodel.txt",n.thin=nt,n.chains=nc,n.burnin=nb,
n.iter=ni,debug=T,DIC=T,working.directory=getwd())
# plot(out)
# hist(out$sims.list$a2)
write.table(x=outC$summary,file=paste(file_name,'Const.csv',sep=""))
######################################################
# matu
inits<-function()
initC
outC<-bugs(data=win.data,inits=inits,parameters.to.save=paramsC,
model.file="allmodel.txt",n.thin=nt,n.chains=nc,n.burnin=nb,
n.iter=ni,debug=T,DIC=T,working.directory=getwd())
# plot(out)
# hist(out$sims.list$a2)
write.table(x=outC$summary,file=paste(file_name,'Const.csv',sep=""))
##
getwd()
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
## must detach at end of run - see end code
const<-outC$mean$a*exp(-outC$mean$a2*Age)
read.csv('GhanaConst.csv')
pars<-read.csv('GhanaConst.csv')
pars
pars<-read.csv('GhanaConst.csv',sep='')
pars
outC<-read.csv('GhanaConst.csv',sep='')
# run simulations
const<-outC$mean$a*exp(-outC$mean$a2*Age)
const<-outC$mean[1,]*exp(-outC$mean[2,]*Age)
outC$mean[2,]
outC$mean
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
const
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
const
plot(const)
1.435e+02
constL<-outC$X2.5.[1]*exp(-outC$X2.5.[2]*Age)
constL
constL<-outC$X97.5.[1]*exp(-outC$X97.5.[2]*Age)
constL
lines(constL)
constL<-outC$X2.5.[1]*exp(-outC$X2.5.[2]*Age)
lines(constL)
round(const)
plot(const)
points(Age,country,bg="black",pch=21)
country = Ghana # Allpops/Bioko/Ghana/Principe/SaoTome/DarEsSalaam/Morogoro
file_name = "Ghana"
points(Age,country,bg="black",pch=21)
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
points(Age,country,bg="black",pch=21)
points(country,bg="black",pch=21)
detach(dat)
detach(dat)
detach(dat)
outC<-read.csv('GhanaConst.csv',sep='')
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const)
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,bg="black",pch=21)
plot(const,ylab="Numbers",xlab='Age')
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,bg="black",pch=21)
legend('topright',c("Data","Predicted"),pch=1:2)
legend('topright',c("Data","Predicted"),pch=c(1,3))
legend('topright',c("Data","Predicted"),pch=c(1,4))
legend('topright',c("Data","Predicted"),pch=c(1,21))
legend('topright',c("Data","Predicted"),pch=c(1,21),bg='black')
legend('topright',c("Data","Predicted"),pch=c(1,21))
legend('topright',c("Data","Predicted"),pch=c(1,21))
?pch
legend('topright',c("Data","Predicted"),pch=c(1,19))
points(dat$Ghana,pch=19)
outC<-read.csv('GhanaConst.csv',sep='')
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age')
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey")
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0)
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey")
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0,lty=2)
dat$Ghana
points(dat$Ghana,pch=19)
plot(dat$Ghana,pch=19)
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19))
abline(h=0,lty=2)
legend('topright',c("Data","Predicted"),pch=c(1,19),bty='n')
# run the main file first
# import model parameters
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(1,19),bty='n')
abline(h=0,lty=2)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n')
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',col=c('black','black'))
?legend
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt=c('black','black'))
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt=c('black','black'))
abline(h=0,lty=2)
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt=c('black','black'))
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('black','black'))
abline(h=0,lty=2)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
## simulations
# run the main file first
# import model parameters
outC<-read.csv('GhanaConst.csv',sep='')
dat <- read.csv("weightedAge.csv")
# run simulations
Age<-0:45
const<-outC$mean[1]*exp(-outC$mean[2]*Age)
round(const)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)))
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)),main="Ghana")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
pdf("simulation_age_ghana.pdf",width=6,height=6)
plot(const,ylab="Numbers",xlab='Age',pch=21,bg="grey",ylim=c(0,max(dat$Ghana)),main="Ghana")
points(dat$Ghana,pch=19)
legend('topright',c("Data","Predicted"),pch=c(21,19),bty='n',pt.bg=c('grey','black'))
abline(h=0,lty=2)
dev.off()
###############################################
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
pdf("compensationVsN.pdf",width=12,height=8)
#tiff("compensationVsN.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,100000), c(0,1), ylab = "Survival", xlab = "Population size",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,100000),y=c(0.8,0.8),lty=2,col=1)
lines(x=c(0,100000),y=c(0.8,0),lty=2,col=2)
mtext("High",side=1,at=100000)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
# y<-read.table(paste(file_name,"const_life_table.csv",sep=""))
# OR
yG <-read.table("Ghanaconst_life_table.csv")
yM <-read.table("Morogoroconst_life_table.csv")
yS <-read.table("SaoTomeconst_life_table.csv")
yP <-read.table("Principeconst_life_table.csv")
yD <-read.table("DarEsSalaamconst_life_table.csv")
### list countries
points(x=c(100000),y=yG$constp[1],pch=1)
points(x=c(10000),y=yM$constp[1],pch=2)
points(x=c(5000),y=yS$constp[1],pch=3)
points(x=c(20000),y=yP$constp[1],pch=4)
points(x=c(6000),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
## survival vs harvest
pdf("compensationVsHarvest.pdf",width=12,height=8)
#tiff("compensationVsHarvest.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,1), c(0,1), ylab = "Survival", xlab = "Harvest",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,1),y=c(0.8,0),lty=2,col=1)
lines(x=c(0,0.5),y=c(0.8,0.8),lty=2,col=2)
lines(x=c(0.5,1),y=c(0.8,0.5),lty=2,col=2)
mtext("High",side=1,at=1)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
points(x=c(0.5),y=yG$constp[1],pch=1)
points(x=c(0),y=yM$constp[1],pch=2)
points(x=c(1),y=yS$constp[1],pch=3)
points(x=c(0),y=yP$constp[1],pch=4)
points(x=c(0),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
yG$constp[1]
const_s_regression<-c(
yG$constp[1],
yM$constp[1],
yS$constp[1],
yP$constp[1],
yD$constp[1])
const_s_regression
class(const_s_regression)
as.data.frame(const_s_regression)
rownames(cres)<-c("Ghana","Morogoro","SaoTome","Principe","DarEsSalaam")
cres<-as.data.frame(const_s_regression)
rownames(cres)<-c("Ghana","Morogoro","SaoTome","Principe","DarEsSalaam")
cres
write.csv(cres,"constSreg_data.csv")
###############################################
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
pdf("compensationVsN.pdf",width=8,height=8)
#tiff("compensationVsN.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,100000), c(0,1), ylab = "Survival", xlab = "Population size",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,100000),y=c(0.8,0.8),lty=2,col=1)
lines(x=c(0,100000),y=c(0.8,0),lty=2,col=2)
mtext("High",side=1,at=100000)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
# y<-read.table(paste(file_name,"const_life_table.csv",sep=""))
# OR
yG <-read.table("Ghanaconst_life_table.csv")
yM <-read.table("Morogoroconst_life_table.csv")
yS <-read.table("SaoTomeconst_life_table.csv")
yP <-read.table("Principeconst_life_table.csv")
yD <-read.table("DarEsSalaamconst_life_table.csv")
### list countries
points(x=c(100000),y=yG$constp[1],pch=1)
points(x=c(10000),y=yM$constp[1],pch=2)
points(x=c(5000),y=yS$constp[1],pch=3)
points(x=c(20000),y=yP$constp[1],pch=4)
points(x=c(6000),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
## survival vs harvest
## additive decline
## conpensatory - const till xs
pdf("compensationVsHarvest.pdf",width=8,height=8)
#tiff("compensationVsHarvest.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,1), c(0,1), ylab = "Survival", xlab = "Harvest",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,1),y=c(0.8,0),lty=2,col=1)
lines(x=c(0,0.5),y=c(0.8,0.8),lty=2,col=2)
lines(x=c(0.5,1),y=c(0.8,0.5),lty=2,col=2)
mtext("High",side=1,at=1)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
points(x=c(0.5),y=yG$constp[1],pch=1)
points(x=c(0),y=yM$constp[1],pch=2)
points(x=c(1),y=yS$constp[1],pch=3)
points(x=c(0),y=yP$constp[1],pch=4)
points(x=c(0),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
pdf("compensationVsN.pdf",width=6,height=6)
#tiff("compensationVsN.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,100000), c(0,1), ylab = "Survival", xlab = "Population size",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,100000),y=c(0.8,0.8),lty=2,col=1)
lines(x=c(0,100000),y=c(0.8,0),lty=2,col=2)
mtext("High",side=1,at=100000)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
# y<-read.table(paste(file_name,"const_life_table.csv",sep=""))
# OR
yG <-read.table("Ghanaconst_life_table.csv")
yM <-read.table("Morogoroconst_life_table.csv")
yS <-read.table("SaoTomeconst_life_table.csv")
yP <-read.table("Principeconst_life_table.csv")
yD <-read.table("DarEsSalaamconst_life_table.csv")
### list countries
points(x=c(100000),y=yG$constp[1],pch=1)
points(x=c(10000),y=yM$constp[1],pch=2)
points(x=c(5000),y=yS$constp[1],pch=3)
points(x=c(20000),y=yP$constp[1],pch=4)
points(x=c(6000),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
## survival vs harvest
## additive decline
## conpensatory - const till xs
pdf("compensationVsHarvest.pdf",width=6,height=6)
#tiff("compensationVsHarvest.tiff",width=8,height=8,units='in',res=300, compression = "lzw")
plot(c(0,1), c(0,1), ylab = "Survival", xlab = "Harvest",type="n",xaxt="n")
## the x- and y-axis, and an integer grid
lines(x=c(0,1),y=c(0.8,0),lty=2,col=1)
lines(x=c(0,0.5),y=c(0.8,0.8),lty=2,col=2)
lines(x=c(0.5,1),y=c(0.8,0.5),lty=2,col=2)
mtext("High",side=1,at=1)
mtext("Low",side=1,at=0)
legend("left",legend=c("Additive","Compensatory"),
lty=c(2,2),bty="n",col=1:2)
## add data
points(x=c(0.5),y=yG$constp[1],pch=1)
points(x=c(0),y=yM$constp[1],pch=2)
points(x=c(1),y=yS$constp[1],pch=3)
points(x=c(0),y=yP$constp[1],pch=4)
points(x=c(0),y=yD$constp[1],pch=5)
legend("bottomleft",legend=c("Ghana","Morogoro","Sao Tome","Principe","Dar Es Salaam"),
pch=1:5,bty="n")
dev.off()
###############################################
rm(list=ls())
###############################################
rm(list=ls())
## read data
## MUST RUN
## run 'initial_cond.R' r code first to generate values
## May need to re-run if chooses wrong init value
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
hist(dat$Ghana)
hist(t(dat$Ghana))
barplot(dat$Ghana)
barplot(dat$Principe)
matplot(dat)
barplot(dat)
dat
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
library(ggplot2)
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
library(ggplot2);library(lattice)
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
?melt
library(ggplot2);library(lattice);library(reshape)
dat$id <- 1:length(Age)
dat <- melt(dat,id.vars = "id")
dat
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
library(ggplot2);library(lattice);library(reshape)
dat <- melt(dat,id.vars = "Age")
dat
ggplot(dat,aes(x=factor(Age), y = value)) +
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=factor(Age), y = value)) +
# facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=factor(Age), y = value)) +
facet_wrap(~variable) #+
#g
dat <- melt(dat,id.vars = "Age")
ggplot(dat,aes(x=factor(Age), y = value)) +
facet_wrap(~variable) #+
geom_bar(aes(fill = factor(value)))
ggplot(dat,aes(x=Age, y = value)) +
facet_wrap(~variable) #+
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=Age, y = value)) +
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(dat,aes(x=Age, y = value))
ggplot(dat,aes(x=Age, y = value))
facet_wrap(Age~variable) +
geom_bar(aes(fill = factor(Age)))
str(Age)
data <- melt(dat,id.vars = "Age")
attach(dat)
detach((dat))
detach(dat)
detach(dat)
detach(dat)
detach(dat)
data <- melt(dat,id.vars = "Age")
data
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
## must detach at end of run - see end code
library(ggplot2);library(lattice);library(reshape)
data <- melt(dat,id.vars = "Age")
data
summary(data)
class(data)
str(data)
ggplot(data,aes(x=Age, y = value))
facet_wrap(Age~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(data,aes(x=factor(Age), y = value))
ggplot(data,aes(x=factor(Age), y = value))+
facet_wrap(Age~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(data,aes(x=factor(Age), y = value))+
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
ggplot(data,aes(x=factor(Age), y = value))+
facet_wrap(~variable) +
geom_bar(aes(fill = factor(Age)))
?stat
??stat
pt<-ggplot(data,aes(x=factor(Age), y = value))
pt+geom_bar
qplot(factor(Age), data=data, geom="bar", fill=factor(Age))
qplot(factor(Age), data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
names(data)
qplot(variable, data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
qplot(value, data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
qplot(x=Age,y=value, data=data, geom="bar", fill=factor(Age))+
facet_wrap(~variable)
barplot(as.matrix(dat), main="Interesting", ylab="Total", beside=TRUE,
col=terrain.colors(5))
dat
barplot(as.matrix(dat[3:7]), main="Interesting", ylab="Total", beside=TRUE)#,
barplot(as.matrix(dat[3:7]), main="Interesting", ylab="Total", beside=TRUE,
col='grey')
barplot(as.matrix(dat[3:7]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
dat <- read.csv("weightedAge.csv")
#dat<-dat[1:14,1:8]
attach(dat)
## must detach at end of run - see end code
barplot(as.matrix(dat[3:7]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
barplot(as.matrix(dat[3:8]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
pdf("age_data.pdf",height=7,width=6)
barplot(as.matrix(dat[3:8]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
dev.off()
pdf("age_data.pdf",height=6,width=8)
barplot(as.matrix(dat[3:8]), main="", ylab="Count",xlab='Age', beside=TRUE,
col='grey')
dev.off()
#####################
>>>>>>> origin/master
